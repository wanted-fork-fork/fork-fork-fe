openapi: 3.0.1
info:
  title: GOOGOO API
  description: GOOGOO API Documentation
  version: 0.0.1
servers:
- url: /
  description: Default Server URL
security:
- Bearer Token: []
paths:
  /api/v1/link/link-open:
    put:
      tags:
      - link-controller
      operationId: updateLinkOpen
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateLinkOpenRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /api/v1/link/key:
    put:
      tags:
      - link-controller
      operationId: regenerateLinkKey
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateLinkResponse'
  /api/v1/info:
    put:
      tags:
      - info-controller
      operationId: updateInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DetailedInfoDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/groups/{groupId}/members/{memberId}/manage:
    put:
      tags:
      - group-controller
      operationId: manageMember
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: memberId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageInvitationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ManageInvitationResponse'
  /api/v1/groups/group-infos/{groupInfoId}/comment:
    put:
      tags:
      - group-info-controller
      operationId: updateGroupInfoComment
      parameters:
      - name: groupInfoId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupInfoCommentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /api/v1/auth/profile-image:
    put:
      tags:
      - auth-controller
      operationId: updateProfileImage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfileImageRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/password:
    put:
      tags:
      - auth-controller
      operationId: updatePassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePasswordRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/name:
    put:
      tags:
      - auth-controller
      operationId: updateName
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNameRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/email:
    put:
      tags:
      - auth-controller
      operationId: updateEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateEmailRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/email/receive:
    put:
      tags:
      - auth-controller
      operationId: updateReceiveEmail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReceiveEmailRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/sharing/{infoId}:
    post:
      tags:
      - sharing-controller
      operationId: saveSharing
      parameters:
      - name: infoId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SaveSharingResponse'
  /api/v1/link:
    post:
      tags:
      - link-controller
      operationId: createLink
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateLinkResponse'
  /api/v1/info/save:
    post:
      tags:
      - info-controller
      operationId: saveInfo
      parameters:
      - name: linkKey
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveInfoRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/image/upload:
    post:
      tags:
      - image-controller
      operationId: uploadImage
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - image
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImageDto'
  /api/v1/groups:
    get:
      tags:
      - group-controller
      operationId: getMyGroups
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupListResponse'
    post:
      tags:
      - group-controller
      operationId: createGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateGroupResponse'
  /api/v1/groups/{groupId}/invite-link:
    post:
      tags:
      - group-controller
      operationId: createGroupInviteLink
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateGroupInviteLinkResponse'
  /api/v1/groups/group-infos:
    post:
      tags:
      - group-info-controller
      operationId: createGroupInfoList
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupInfoListRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /api/v1/groups/apply:
    post:
      tags:
      - group-controller
      operationId: applyToJoinGroup
      parameters:
      - name: inviteKey
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ApplyToJoinGroupResponse'
  /api/v1/auth/refresh-token:
    post:
      tags:
      - auth-controller
      operationId: refreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserTokenDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserTokenDto'
  /api/v1/auth/password/verify:
    post:
      tags:
      - auth-controller
      operationId: verifyExistedPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyExistedPasswordRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/logout:
    post:
      tags:
      - auth-controller
      operationId: logout
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /api/v1/auth/email/verify-code/verify:
    post:
      tags:
      - auth-controller
      operationId: verifyEmailVerifyCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCodeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/email/verify-code/send:
    post:
      tags:
      - auth-controller
      operationId: sendEmailVerifyCode
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendVerifyEmailRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/email/signup:
    post:
      tags:
      - auth-controller
      operationId: signup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserTokenDto'
  /api/v1/auth/email/signup/verify-code/verify:
    post:
      tags:
      - auth-controller
      operationId: verifyEmailSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCommonVerificationMailRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
      deprecated: true
  /api/v1/auth/email/opt-out:
    post:
      tags:
      - auth-controller
      operationId: optOutEmail
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /api/v1/auth/email/login:
    post:
      tags:
      - auth-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmailLoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserTokenDto'
  /api/v1/auth/email/common/verify-code/verify:
    post:
      tags:
      - auth-controller
      operationId: verifyCommonVerificationMail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyCommonVerificationMailRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/VerificationResultDto'
  /api/v1/auth/email/common/verify-code/send:
    post:
      tags:
      - auth-controller
      operationId: sendCommonVerificationMail
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendCommonVerificationMailRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: boolean
  /health:
    get:
      tags:
      - health-controller
      operationId: health
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /health/log:
    get:
      tags:
      - health-controller
      operationId: log
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/sharing/public/{sharingId}:
    get:
      tags:
      - sharing-controller
      operationId: getInfoBySharingId
      parameters:
      - name: sharingId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/InfoToShareResponse'
  /api/v1/link/valid/{linkKey}:
    get:
      tags:
      - link-controller
      operationId: validateLink
      parameters:
      - name: linkKey
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ValidateLinkResponse'
  /api/v1/link/status:
    get:
      tags:
      - link-controller
      operationId: getLinkByMatchMakerId
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/LinkStatusResponse'
  /api/v1/link/match-maker/{linkKey}:
    get:
      tags:
      - link-controller
      operationId: getMatchMakerName
      parameters:
      - name: linkKey
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/info/search:
    get:
      tags:
      - info-controller
      operationId: searchInfo
      parameters:
      - name: searchInfoRequestDto
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SearchInfoRequestDto'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SearchInfoResponse'
  /api/v1/info/detail/{id}:
    get:
      tags:
      - info-controller
      operationId: getInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DetailedInfoDto'
  /api/v1/info/all:
    get:
      tags:
      - info-controller
      operationId: getAllInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ArchivedInfoResponse'
  /api/v1/info/address:
    get:
      tags:
      - info-controller
      operationId: getAddress
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CityAndTownResponse'
  /api/v1/groups/{groupId}/members:
    get:
      tags:
      - group-controller
      operationId: getGroupMembers
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupMemberResponse'
  /api/v1/groups/{groupId}/group-infos/{infoId}:
    get:
      tags:
      - group-info-controller
      operationId: getGroupInfoDetail
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      - name: infoId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GroupInfoDetailResponse'
  /api/v1/groups/{groupId}/candidates:
    get:
      tags:
      - group-info-controller
      operationId: getAvailableCandidates
      parameters:
      - name: groupId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AvailableCandidateResponse'
  /api/v1/auth/kakao/login:
    get:
      tags:
      - kakao-auth-controller
      operationId: loginKakao
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserTokenDto'
  /api/v1/auth/info:
    get:
      tags:
      - auth-controller
      operationId: info
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserInfoResponse'
  /api/v1/auth/enrollment-status:
    get:
      tags:
      - auth-controller
      operationId: getUserEnrollmentStatus
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserEnrollmentStatusResponse'
  /api/v1/info/{id}:
    delete:
      tags:
      - info-controller
      operationId: deleteInfo
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/v1/groups/group-infos/{groupInfoId}:
    delete:
      tags:
      - group-info-controller
      operationId: deleteGroupInfo
      parameters:
      - name: groupInfoId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
  /api/v1/auth/quit:
    delete:
      tags:
      - auth-controller
      operationId: quit
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Unit'
components:
  schemas:
    UpdateLinkOpenRequest:
      required:
      - isOpen
      - linkId
      type: object
      properties:
        linkId:
          type: string
        isOpen:
          type: boolean
    Unit:
      type: object
    CreateLinkResponse:
      required:
      - isOpen
      - linkId
      - linkKey
      type: object
      properties:
        linkId:
          type: string
        linkKey:
          type: string
        isOpen:
          type: boolean
    Book:
      required:
      - bookName
      - cause
      type: object
      properties:
        bookName:
          type: string
        cause:
          type: string
    DetailedInfoDto:
      required:
      - id
      - userInfo
      type: object
      properties:
        id:
          type: string
        userInfo:
          $ref: '#/components/schemas/DetailedInfoUserInfo'
        idealPartner:
          $ref: '#/components/schemas/DetailedInfoIdealPartner'
    DetailedInfoIdealPartner:
      required:
      - drinking
      - hobbies
      - religion
      - requiredOptions
      - smoking
      - toMatchMaker
      type: object
      properties:
        ageRange:
          $ref: '#/components/schemas/NumberRange'
        heightRange:
          $ref: '#/components/schemas/NumberRange'
        style:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/InfoImage'
        location:
          type: string
          enum:
          - IMPORTANT
          - NOT_IMPORTANT
        hobbies:
          type: string
          enum:
          - IMPORTANT
          - NOT_IMPORTANT
        religion:
          $ref: '#/components/schemas/Religion'
        drinking:
          $ref: '#/components/schemas/IdealPartnerDrinking'
        smoking:
          $ref: '#/components/schemas/IdealPartnerSmoking'
        requiredOptions:
          type: array
          items:
            type: string
        toMatchMaker:
          type: string
    DetailedInfoUserInfo:
      required:
      - birthDate
      - drinking
      - gender
      - height
      - hobbies
      - images
      - job
      - location
      - name
      - religion
      - smoking
      type: object
      properties:
        name:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        birthDate:
          type: string
          format: date-time
        height:
          type: integer
          format: int32
        images:
          type: array
          items:
            $ref: '#/components/schemas/InfoImage'
        mbti:
          type: string
          enum:
          - ENFP
          - ENFJ
          - ENTJ
          - ENTP
          - ESFJ
          - ESFP
          - ESTJ
          - ESTP
          - INFJ
          - INFP
          - INTJ
          - INTP
          - ISFJ
          - ISFP
          - ISTJ
          - ISTP
        job:
          $ref: '#/components/schemas/Job'
        location:
          $ref: '#/components/schemas/UserInfoLocation'
        religion:
          $ref: '#/components/schemas/Religion'
        hobbies:
          type: array
          items:
            type: string
        drinking:
          $ref: '#/components/schemas/UserInfoDrinking'
        smoking:
          $ref: '#/components/schemas/UserInfoSmoking'
        introduction:
          type: string
        pets:
          type: array
          items:
            type: string
        foods:
          type: array
          items:
            type: string
        dateStyle:
          type: array
          items:
            type: string
        book:
          $ref: '#/components/schemas/Book'
        movie:
          $ref: '#/components/schemas/Movie'
    IdealPartnerDrinking:
      required:
      - drinkingCategory
      type: object
      properties:
        drinkingCategory:
          type: string
          enum:
          - NO_PROBLEM
          - ONE_TWO_TIMES_A_WEEK
          - ONE_TWO_TIMES_A_MONTH
          - NEVER
          - ETC
        drinkingAmount:
          type: string
    IdealPartnerSmoking:
      required:
      - smokingCategory
      type: object
      properties:
        smokingCategory:
          type: string
          enum:
          - DOESNT_MATTER
          - NEVER
          - GOOD
          - ETC
        smokingAmount:
          type: string
    InfoImage:
      required:
      - imageId
      - url
      type: object
      properties:
        imageId:
          type: string
        url:
          type: string
    Job:
      required:
      - jobCategory
      - jobName
      type: object
      properties:
        jobCategory:
          type: string
          enum:
          - STUDENT
          - EMPLOYEE
          - FREELANCER
          - ETC
        jobName:
          type: string
    Movie:
      required:
      - cause
      - movieName
      type: object
      properties:
        movieName:
          type: string
        cause:
          type: string
    NumberRange:
      required:
      - max
      - min
      type: object
      properties:
        min:
          type: integer
          format: int32
        max:
          type: integer
          format: int32
    Religion:
      required:
      - religionCategory
      type: object
      properties:
        religionCategory:
          type: string
          enum:
          - CHRISTIANITY
          - CATHOLICISM
          - BUDDHISM
          - IRRELIGION
          - ETC
        religionName:
          type: string
    UserInfoDrinking:
      required:
      - drinkingCategory
      type: object
      properties:
        drinkingCategory:
          type: string
          enum:
          - NON_DRINKER
          - DRINKER
        drinkingAmount:
          type: string
    UserInfoLocation:
      required:
      - cities
      - towns
      type: object
      properties:
        cities:
          type: array
          items:
            type: string
            enum:
            - SEOUL
            - GYEONGGI
            - INCHEON
            - DAEJEON
            - DAEGU
            - BUSAN
            - ULSAN
            - GWANGJU
            - GANGWON
            - SEJONG
            - CHUNGCHEONGNAM
            - CHUNGCHEONGBUK
            - GYEONGSANGNAM
            - GYEONGSANGBUK
            - JEOLANAM
            - JEOLABUK
            - JEJU
        towns:
          type: array
          items:
            type: string
            enum:
            - GANGNAM
            - GANGDONG
            - GANGBUK
            - GANGSEO
            - GWANAK
            - GWANGJIN
            - GURO
            - GEUMCHEON
            - NOWON
            - DOBONG
            - DONGDAEMUN
            - DONGJAK
            - MAPO
            - SEODAEMUN
            - SEOCHO
            - SEONGDONG
            - SEONGBUK
            - SONGPA
            - YANGCHEON
            - YEONGDEUNGPO
            - YONGSAN
            - EUNPYEONG
            - JONGNO
            - SEOUL_JUNG
            - JUNGRANG
            - GAPYEONG
            - GOYANG
            - GWACHEON
            - GWANGMYEONG
            - GWANGJU
            - GURI
            - GUNPO
            - GIMPO
            - NAMYANGJU
            - DONGDUCHEON
            - BUCHEON
            - SEONGNAM
            - SUWON
            - SIHEUNG
            - ANSAN
            - ANSEONG
            - ANYANG
            - YANGJU
            - YANGPYEONG
            - YEOJU
            - YEONCHEON
            - OSAN
            - YONGIN
            - UIWANG
            - UIJEONGBU
            - ICHEON
            - PAJU
            - PYEONGTAEK
            - POCHEON
            - HANAM
            - HWASEONG
            - GANGHWA
            - GYEYANG
            - NAMDONG
            - INCHEON_DONG
            - MICHUHOL
            - BUPYEONG
            - SEO
            - YEONSU
            - ONGJIN
            - INCHEON_JUNG
            - DAEDEOK
            - DAEJEON_DONG
            - DAEJEON_SEO
            - YUSEONG
            - DAEJEON_JUNG
            - BUSAN_GANGSEO
            - GEUMJEONG
            - GIJANG
            - BUSAN_NAM
            - BUSAN_DONG
            - DONGNAE
            - BUSANJIN
            - BUSAN_BUK
            - SASANG
            - SAHA
            - BUSAN_SEO
            - SUYEONG
            - YEONJE
            - YEONGDO
            - BUSAN_JUNG
            - HAEUNDAE
            - ULSAN_NAM
            - ULSAN_DONG
            - ULSAN_BUK
            - ULJU
            - ULSAN_JUNG
            - GWANGSAN
            - GWANGJU_NAM
            - GWANGJU_DONG
            - GWANGJU_BUK
            - GWANGJU_SEO
            - GANGNEUNG
            - GOSEONG
            - DONGHAE
            - SAMCHEOK
            - SOKCHO
            - YANGGU
            - YANGYANG
            - YEONGWOL
            - WONJU
            - INJE
            - JEONGSEON
            - CHEORWON
            - CHUNCHEON
            - TAEBAEK
            - PYEONGCHANG
            - HONGCHEON
            - HWACHEON
            - HOENGSEONG
            - SEJONG
            - GOESAN
            - DANYANG
            - BOEUN
            - YEONGDONG
            - OKCHEON
            - EUMSEONG
            - JECHEON
            - JEUNGPYEONG
            - JINCHEON
            - CHEONGJU
            - CHUNGJU
            - GYERYONG
            - GONGJU
            - GEUMSAN
            - NONSAN
            - DANGJIN
            - BORYEONG
            - BUYEO
            - SEOSAN
            - SEOCHON
            - ASAN
            - YEONGI
            - YESAN
            - CHEONAN
            - CHEONGYANG
            - TAEAN
            - HONGSEONG
            - GYEONGSAN
            - GYEONGJU
            - GORYEONG
            - GUMI
            - GIMCHEON
            - MUNGYEONG
            - BONGHWA
            - SANGJU
            - SEONGJU
            - ANDONG
            - YEONGDEOK
            - YEONGYANG
            - YEONGJU
            - YEONGCHEON
            - YECHUN
            - ULLUNG
            - ULJIN
            - UISEONG
            - CHEONGDO
            - CHEONGSONG
            - CHILGOK
            - POHANG
            - GEOJE
            - GEOCHANG
            - GOSEONG_GN
            - GIMHAE
            - NAMHAE
            - MIRYANG
            - SACHEON
            - SANCHEONG
            - YANGSAN
            - UIRYEONG
            - JINJU
            - CHANGNYEONG
            - CHANGWON
            - TONGYEONG
            - HADONG
            - HAMAN
            - HAMYANG
            - HAPCHEON
            - GOCHANG
            - GUNSAN
            - GIMJE
            - NAMWON
            - MUJU
            - BUAN
            - SUNCHANG
            - WANJU
            - IKSAN
            - IMSIL
            - JANGSU
            - JEONJU
            - JEONGEUP
            - JINAN
            - GANGJIN
            - GOHEUNG
            - GOKSEONG
            - GWANGYANG
            - GURYE
            - NAJU
            - DAMYANG
            - MOKPO
            - MUAN
            - BOSEONG
            - SUNCHEON
            - SINAN
            - YEOSU
            - YEONGGWANG
            - YEONGAM
            - WANDO
            - JANGSEONG
            - JANGHEUNG
            - JINDO
            - HAMPYEONG
            - HAENAM
            - HWASUN
            - JEJU
            - SEOGWIPO
            - GUNWEE
            - DAEGU_NAM
            - DALSEO
            - DALSEONG
            - DAEGU_DONG
            - DAEGU_BUK
            - DAEGU_SEO
            - SUSEONG
            - DAEGU_JUNG
    UserInfoSmoking:
      required:
      - smokingCategory
      type: object
      properties:
        smokingCategory:
          type: string
          enum:
          - NON_SMOKER
          - SMOKER
          - ETC
        smokingAmount:
          type: string
    ManageInvitationRequest:
      required:
      - action
      type: object
      properties:
        action:
          type: string
          enum:
          - APPROVE
          - REJECT
          - KICK
          - LEAVE
    ManageInvitationResponse:
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
        groupId:
          type: string
        groupName:
          type: string
        memberName:
          type: string
    UpdateGroupInfoCommentRequest:
      type: object
      properties:
        message:
          type: string
    UpdateProfileImageRequest:
      required:
      - profileImage
      type: object
      properties:
        profileImage:
          type: string
    UpdatePasswordRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
        token:
          type: string
    UpdateNameRequest:
      required:
      - name
      type: object
      properties:
        name:
          type: string
    UpdateEmailRequest:
      required:
      - email
      type: object
      properties:
        email:
          type: string
    UpdateReceiveEmailRequest:
      required:
      - receiveEmail
      type: object
      properties:
        receiveEmail:
          type: boolean
    SaveSharingResponse:
      required:
      - sharingId
      type: object
      properties:
        sharingId:
          type: string
    IdealPartnerRequest:
      required:
      - drinking
      - hobbies
      - religion
      - requiredOptions
      - smoking
      - toMatchMaker
      type: object
      properties:
        ageRange:
          $ref: '#/components/schemas/NumberRange'
        heightRange:
          $ref: '#/components/schemas/NumberRange'
        style:
          type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/InfoImage'
        location:
          type: string
          enum:
          - IMPORTANT
          - NOT_IMPORTANT
        hobbies:
          type: string
          enum:
          - IMPORTANT
          - NOT_IMPORTANT
        religion:
          $ref: '#/components/schemas/Religion'
        drinking:
          $ref: '#/components/schemas/IdealPartnerDrinking'
        smoking:
          $ref: '#/components/schemas/IdealPartnerSmoking'
        requiredOptions:
          type: array
          items:
            type: string
        toMatchMaker:
          type: string
    SaveInfoRequest:
      required:
      - userInfo
      type: object
      properties:
        userInfo:
          $ref: '#/components/schemas/UserInfoRequest'
        idealPartner:
          $ref: '#/components/schemas/IdealPartnerRequest'
    UserInfoRequest:
      required:
      - birthDate
      - drinking
      - gender
      - height
      - hobbies
      - images
      - job
      - location
      - name
      - religion
      - smoking
      type: object
      properties:
        name:
          type: string
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        birthDate:
          type: string
          format: date-time
        height:
          type: integer
          format: int32
        images:
          type: array
          items:
            $ref: '#/components/schemas/InfoImage'
        mbti:
          type: string
          enum:
          - ENFP
          - ENFJ
          - ENTJ
          - ENTP
          - ESFJ
          - ESFP
          - ESTJ
          - ESTP
          - INFJ
          - INFP
          - INTJ
          - INTP
          - ISFJ
          - ISFP
          - ISTJ
          - ISTP
        job:
          $ref: '#/components/schemas/Job'
        location:
          $ref: '#/components/schemas/UserInfoLocation'
        religion:
          $ref: '#/components/schemas/Religion'
        hobbies:
          type: array
          items:
            type: string
        drinking:
          $ref: '#/components/schemas/UserInfoDrinking'
        smoking:
          $ref: '#/components/schemas/UserInfoSmoking'
        introduction:
          type: string
        pets:
          type: array
          items:
            type: string
        foods:
          type: array
          items:
            type: string
        dateStyle:
          type: array
          items:
            type: string
        book:
          $ref: '#/components/schemas/Book'
        movie:
          $ref: '#/components/schemas/Movie'
    ImageDto:
      required:
      - imageId
      - url
      type: object
      properties:
        imageId:
          type: string
        url:
          type: string
    CreateGroupRequest:
      required:
      - icon
      - name
      type: object
      properties:
        name:
          type: string
        icon:
          type: string
          enum:
          - LOCK
          - ARROW
          - LETTER
          - HEART
          - FOOTPRINT
          - WINE_GLASS
          - EGG
          - BOUQUET
          - RING
          - STAR
    CreateGroupResponse:
      required:
      - groupId
      - icon
      - name
      type: object
      properties:
        groupId:
          type: string
        name:
          type: string
        icon:
          type: string
          enum:
          - LOCK
          - ARROW
          - LETTER
          - HEART
          - FOOTPRINT
          - WINE_GLASS
          - EGG
          - BOUQUET
          - RING
          - STAR
    CreateGroupInviteLinkResponse:
      required:
      - inviteKey
      type: object
      properties:
        inviteKey:
          type: string
    CreateGroupInfoListRequest:
      required:
      - groupInfoList
      type: object
      properties:
        groupInfoList:
          type: array
          items:
            $ref: '#/components/schemas/CreateGroupInfoRequest'
    CreateGroupInfoRequest:
      required:
      - groupId
      - infoId
      type: object
      properties:
        infoId:
          type: string
        groupId:
          type: string
        message:
          type: string
    ApplyToJoinGroupResponse:
      required:
      - success
      type: object
      properties:
        success:
          type: boolean
        groupId:
          type: string
        groupName:
          type: string
    UserTokenDto:
      required:
      - accessToken
      - refreshToken
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
    VerifyExistedPasswordRequest:
      required:
      - password
      type: object
      properties:
        password:
          type: string
    VerifyCodeRequest:
      required:
      - verifyCode
      type: object
      properties:
        verifyCode:
          type: string
    SendVerifyEmailRequest:
      required:
      - email
      type: object
      properties:
        email:
          type: string
    SignupRequest:
      required:
      - email
      - name
      - password
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    VerifyCommonVerificationMailRequest:
      required:
      - key
      - verifyCode
      type: object
      properties:
        key:
          type: string
        verifyCode:
          type: string
    EmailLoginRequest:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    VerificationResultDto:
      required:
      - email
      - isVerified
      type: object
      properties:
        email:
          type: string
        isVerified:
          type: boolean
        isDuplicated:
          type: boolean
        token:
          type: string
        duplicated:
          type: boolean
          writeOnly: true
    SendCommonVerificationMailRequest:
      required:
      - email
      - key
      type: object
      properties:
        key:
          type: string
        email:
          type: string
    InfoToShareResponse:
      required:
      - expiredDate
      - sharingId
      - userInfo
      type: object
      properties:
        sharingId:
          type: string
        userInfo:
          $ref: '#/components/schemas/InfoToShareUserInfo'
        expiredDate:
          type: string
          format: date-time
    InfoToShareUserInfo:
      required:
      - birthDate
      - drinking
      - gender
      - height
      - hobbies
      - images
      - introduction
      - job
      - location
      - religion
      - smoking
      type: object
      properties:
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        birthDate:
          type: string
          format: date-time
        height:
          type: integer
          format: int32
        images:
          type: array
          items:
            $ref: '#/components/schemas/InfoImage'
        mbti:
          type: string
          enum:
          - ENFP
          - ENFJ
          - ENTJ
          - ENTP
          - ESFJ
          - ESFP
          - ESTJ
          - ESTP
          - INFJ
          - INFP
          - INTJ
          - INTP
          - ISFJ
          - ISFP
          - ISTJ
          - ISTP
        job:
          $ref: '#/components/schemas/Job'
        location:
          $ref: '#/components/schemas/UserInfoLocation'
        religion:
          $ref: '#/components/schemas/Religion'
        hobbies:
          type: array
          items:
            type: string
        drinking:
          $ref: '#/components/schemas/UserInfoDrinking'
        smoking:
          $ref: '#/components/schemas/UserInfoSmoking'
        pets:
          type: array
          items:
            type: string
        foods:
          type: array
          items:
            type: string
        dateStyle:
          type: array
          items:
            type: string
        book:
          $ref: '#/components/schemas/Book'
        movie:
          $ref: '#/components/schemas/Movie'
        introduction:
          type: string
    ValidateLinkResponse:
      required:
      - isValid
      - linkId
      type: object
      properties:
        isValid:
          type: boolean
        linkId:
          type: string
    LinkStatusResponse:
      required:
      - isOpen
      - linkId
      - linkKey
      type: object
      properties:
        linkId:
          type: string
        linkKey:
          type: string
        isOpen:
          type: boolean
    SearchInfoRequestDto:
      type: object
      properties:
        page:
          type: integer
          format: int32
          writeOnly: true
        size:
          type: integer
          format: int32
          writeOnly: true
        sortBy:
          type: string
          writeOnly: true
          enum:
          - CREATED_DATE
          - NAME
        sortDirection:
          type: string
          writeOnly: true
          enum:
          - ASC
          - DESC
        gender:
          type: string
          writeOnly: true
          enum:
          - MALE
          - FEMALE
        ageFrom:
          type: string
          format: date-time
          writeOnly: true
        ageTo:
          type: string
          format: date-time
          writeOnly: true
        heightFrom:
          type: integer
          format: int32
          writeOnly: true
        heightTo:
          type: integer
          format: int32
          writeOnly: true
        townList:
          type: array
          writeOnly: true
          items:
            type: string
            enum:
            - GANGNAM
            - GANGDONG
            - GANGBUK
            - GANGSEO
            - GWANAK
            - GWANGJIN
            - GURO
            - GEUMCHEON
            - NOWON
            - DOBONG
            - DONGDAEMUN
            - DONGJAK
            - MAPO
            - SEODAEMUN
            - SEOCHO
            - SEONGDONG
            - SEONGBUK
            - SONGPA
            - YANGCHEON
            - YEONGDEUNGPO
            - YONGSAN
            - EUNPYEONG
            - JONGNO
            - SEOUL_JUNG
            - JUNGRANG
            - GAPYEONG
            - GOYANG
            - GWACHEON
            - GWANGMYEONG
            - GWANGJU
            - GURI
            - GUNPO
            - GIMPO
            - NAMYANGJU
            - DONGDUCHEON
            - BUCHEON
            - SEONGNAM
            - SUWON
            - SIHEUNG
            - ANSAN
            - ANSEONG
            - ANYANG
            - YANGJU
            - YANGPYEONG
            - YEOJU
            - YEONCHEON
            - OSAN
            - YONGIN
            - UIWANG
            - UIJEONGBU
            - ICHEON
            - PAJU
            - PYEONGTAEK
            - POCHEON
            - HANAM
            - HWASEONG
            - GANGHWA
            - GYEYANG
            - NAMDONG
            - INCHEON_DONG
            - MICHUHOL
            - BUPYEONG
            - SEO
            - YEONSU
            - ONGJIN
            - INCHEON_JUNG
            - DAEDEOK
            - DAEJEON_DONG
            - DAEJEON_SEO
            - YUSEONG
            - DAEJEON_JUNG
            - BUSAN_GANGSEO
            - GEUMJEONG
            - GIJANG
            - BUSAN_NAM
            - BUSAN_DONG
            - DONGNAE
            - BUSANJIN
            - BUSAN_BUK
            - SASANG
            - SAHA
            - BUSAN_SEO
            - SUYEONG
            - YEONJE
            - YEONGDO
            - BUSAN_JUNG
            - HAEUNDAE
            - ULSAN_NAM
            - ULSAN_DONG
            - ULSAN_BUK
            - ULJU
            - ULSAN_JUNG
            - GWANGSAN
            - GWANGJU_NAM
            - GWANGJU_DONG
            - GWANGJU_BUK
            - GWANGJU_SEO
            - GANGNEUNG
            - GOSEONG
            - DONGHAE
            - SAMCHEOK
            - SOKCHO
            - YANGGU
            - YANGYANG
            - YEONGWOL
            - WONJU
            - INJE
            - JEONGSEON
            - CHEORWON
            - CHUNCHEON
            - TAEBAEK
            - PYEONGCHANG
            - HONGCHEON
            - HWACHEON
            - HOENGSEONG
            - SEJONG
            - GOESAN
            - DANYANG
            - BOEUN
            - YEONGDONG
            - OKCHEON
            - EUMSEONG
            - JECHEON
            - JEUNGPYEONG
            - JINCHEON
            - CHEONGJU
            - CHUNGJU
            - GYERYONG
            - GONGJU
            - GEUMSAN
            - NONSAN
            - DANGJIN
            - BORYEONG
            - BUYEO
            - SEOSAN
            - SEOCHON
            - ASAN
            - YEONGI
            - YESAN
            - CHEONAN
            - CHEONGYANG
            - TAEAN
            - HONGSEONG
            - GYEONGSAN
            - GYEONGJU
            - GORYEONG
            - GUMI
            - GIMCHEON
            - MUNGYEONG
            - BONGHWA
            - SANGJU
            - SEONGJU
            - ANDONG
            - YEONGDEOK
            - YEONGYANG
            - YEONGJU
            - YEONGCHEON
            - YECHUN
            - ULLUNG
            - ULJIN
            - UISEONG
            - CHEONGDO
            - CHEONGSONG
            - CHILGOK
            - POHANG
            - GEOJE
            - GEOCHANG
            - GOSEONG_GN
            - GIMHAE
            - NAMHAE
            - MIRYANG
            - SACHEON
            - SANCHEONG
            - YANGSAN
            - UIRYEONG
            - JINJU
            - CHANGNYEONG
            - CHANGWON
            - TONGYEONG
            - HADONG
            - HAMAN
            - HAMYANG
            - HAPCHEON
            - GOCHANG
            - GUNSAN
            - GIMJE
            - NAMWON
            - MUJU
            - BUAN
            - SUNCHANG
            - WANJU
            - IKSAN
            - IMSIL
            - JANGSU
            - JEONJU
            - JEONGEUP
            - JINAN
            - GANGJIN
            - GOHEUNG
            - GOKSEONG
            - GWANGYANG
            - GURYE
            - NAJU
            - DAMYANG
            - MOKPO
            - MUAN
            - BOSEONG
            - SUNCHEON
            - SINAN
            - YEOSU
            - YEONGGWANG
            - YEONGAM
            - WANDO
            - JANGSEONG
            - JANGHEUNG
            - JINDO
            - HAMPYEONG
            - HAENAM
            - HWASUN
            - JEJU
            - SEOGWIPO
            - GUNWEE
            - DAEGU_NAM
            - DALSEO
            - DALSEONG
            - DAEGU_DONG
            - DAEGU_BUK
            - DAEGU_SEO
            - SUSEONG
            - DAEGU_JUNG
    ArchivedInfoResponse:
      required:
      - birthDate
      - drinking
      - gender
      - height
      - hobbies
      - images
      - job
      - location
      - name
      - religion
      - smoking
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        birthDate:
          type: string
          format: date-time
        gender:
          type: string
          enum:
          - MALE
          - FEMALE
        location:
          $ref: '#/components/schemas/UserInfoLocation'
        height:
          type: integer
          format: int32
        mbti:
          type: string
          enum:
          - ENFP
          - ENFJ
          - ENTJ
          - ENTP
          - ESFJ
          - ESFP
          - ESTJ
          - ESTP
          - INFJ
          - INFP
          - INTJ
          - INTP
          - ISFJ
          - ISFP
          - ISTJ
          - ISTP
        religion:
          $ref: '#/components/schemas/Religion'
        job:
          $ref: '#/components/schemas/Job'
        drinking:
          $ref: '#/components/schemas/UserInfoDrinking'
        smoking:
          $ref: '#/components/schemas/UserInfoSmoking'
        hobbies:
          type: array
          items:
            type: string
        images:
          type: array
          items:
            $ref: '#/components/schemas/InfoImage'
    SearchInfoResponse:
      required:
      - count
      - infos
      type: object
      properties:
        count:
          type: integer
          format: int64
        infos:
          type: array
          items:
            $ref: '#/components/schemas/ArchivedInfoResponse'
    CityAndTownResponse:
      required:
      - city
      - town
      type: object
      properties:
        city:
          $ref: '#/components/schemas/CityDto'
        town:
          type: array
          items:
            $ref: '#/components/schemas/TownDto'
    CityDto:
      required:
      - city
      - cityName
      type: object
      properties:
        city:
          type: string
          enum:
          - SEOUL
          - GYEONGGI
          - INCHEON
          - DAEJEON
          - DAEGU
          - BUSAN
          - ULSAN
          - GWANGJU
          - GANGWON
          - SEJONG
          - CHUNGCHEONGNAM
          - CHUNGCHEONGBUK
          - GYEONGSANGNAM
          - GYEONGSANGBUK
          - JEOLANAM
          - JEOLABUK
          - JEJU
        cityName:
          type: string
    TownDto:
      required:
      - town
      - townName
      type: object
      properties:
        town:
          type: string
          enum:
          - GANGNAM
          - GANGDONG
          - GANGBUK
          - GANGSEO
          - GWANAK
          - GWANGJIN
          - GURO
          - GEUMCHEON
          - NOWON
          - DOBONG
          - DONGDAEMUN
          - DONGJAK
          - MAPO
          - SEODAEMUN
          - SEOCHO
          - SEONGDONG
          - SEONGBUK
          - SONGPA
          - YANGCHEON
          - YEONGDEUNGPO
          - YONGSAN
          - EUNPYEONG
          - JONGNO
          - SEOUL_JUNG
          - JUNGRANG
          - GAPYEONG
          - GOYANG
          - GWACHEON
          - GWANGMYEONG
          - GWANGJU
          - GURI
          - GUNPO
          - GIMPO
          - NAMYANGJU
          - DONGDUCHEON
          - BUCHEON
          - SEONGNAM
          - SUWON
          - SIHEUNG
          - ANSAN
          - ANSEONG
          - ANYANG
          - YANGJU
          - YANGPYEONG
          - YEOJU
          - YEONCHEON
          - OSAN
          - YONGIN
          - UIWANG
          - UIJEONGBU
          - ICHEON
          - PAJU
          - PYEONGTAEK
          - POCHEON
          - HANAM
          - HWASEONG
          - GANGHWA
          - GYEYANG
          - NAMDONG
          - INCHEON_DONG
          - MICHUHOL
          - BUPYEONG
          - SEO
          - YEONSU
          - ONGJIN
          - INCHEON_JUNG
          - DAEDEOK
          - DAEJEON_DONG
          - DAEJEON_SEO
          - YUSEONG
          - DAEJEON_JUNG
          - BUSAN_GANGSEO
          - GEUMJEONG
          - GIJANG
          - BUSAN_NAM
          - BUSAN_DONG
          - DONGNAE
          - BUSANJIN
          - BUSAN_BUK
          - SASANG
          - SAHA
          - BUSAN_SEO
          - SUYEONG
          - YEONJE
          - YEONGDO
          - BUSAN_JUNG
          - HAEUNDAE
          - ULSAN_NAM
          - ULSAN_DONG
          - ULSAN_BUK
          - ULJU
          - ULSAN_JUNG
          - GWANGSAN
          - GWANGJU_NAM
          - GWANGJU_DONG
          - GWANGJU_BUK
          - GWANGJU_SEO
          - GANGNEUNG
          - GOSEONG
          - DONGHAE
          - SAMCHEOK
          - SOKCHO
          - YANGGU
          - YANGYANG
          - YEONGWOL
          - WONJU
          - INJE
          - JEONGSEON
          - CHEORWON
          - CHUNCHEON
          - TAEBAEK
          - PYEONGCHANG
          - HONGCHEON
          - HWACHEON
          - HOENGSEONG
          - SEJONG
          - GOESAN
          - DANYANG
          - BOEUN
          - YEONGDONG
          - OKCHEON
          - EUMSEONG
          - JECHEON
          - JEUNGPYEONG
          - JINCHEON
          - CHEONGJU
          - CHUNGJU
          - GYERYONG
          - GONGJU
          - GEUMSAN
          - NONSAN
          - DANGJIN
          - BORYEONG
          - BUYEO
          - SEOSAN
          - SEOCHON
          - ASAN
          - YEONGI
          - YESAN
          - CHEONAN
          - CHEONGYANG
          - TAEAN
          - HONGSEONG
          - GYEONGSAN
          - GYEONGJU
          - GORYEONG
          - GUMI
          - GIMCHEON
          - MUNGYEONG
          - BONGHWA
          - SANGJU
          - SEONGJU
          - ANDONG
          - YEONGDEOK
          - YEONGYANG
          - YEONGJU
          - YEONGCHEON
          - YECHUN
          - ULLUNG
          - ULJIN
          - UISEONG
          - CHEONGDO
          - CHEONGSONG
          - CHILGOK
          - POHANG
          - GEOJE
          - GEOCHANG
          - GOSEONG_GN
          - GIMHAE
          - NAMHAE
          - MIRYANG
          - SACHEON
          - SANCHEONG
          - YANGSAN
          - UIRYEONG
          - JINJU
          - CHANGNYEONG
          - CHANGWON
          - TONGYEONG
          - HADONG
          - HAMAN
          - HAMYANG
          - HAPCHEON
          - GOCHANG
          - GUNSAN
          - GIMJE
          - NAMWON
          - MUJU
          - BUAN
          - SUNCHANG
          - WANJU
          - IKSAN
          - IMSIL
          - JANGSU
          - JEONJU
          - JEONGEUP
          - JINAN
          - GANGJIN
          - GOHEUNG
          - GOKSEONG
          - GWANGYANG
          - GURYE
          - NAJU
          - DAMYANG
          - MOKPO
          - MUAN
          - BOSEONG
          - SUNCHEON
          - SINAN
          - YEOSU
          - YEONGGWANG
          - YEONGAM
          - WANDO
          - JANGSEONG
          - JANGHEUNG
          - JINDO
          - HAMPYEONG
          - HAENAM
          - HWASUN
          - JEJU
          - SEOGWIPO
          - GUNWEE
          - DAEGU_NAM
          - DALSEO
          - DALSEONG
          - DAEGU_DONG
          - DAEGU_BUK
          - DAEGU_SEO
          - SUSEONG
          - DAEGU_JUNG
        townName:
          type: string
    GroupListResponse:
      required:
      - candidateCount
      - groupIcon
      - groupId
      - groupName
      - myStatus
      type: object
      properties:
        groupId:
          type: string
        groupName:
          type: string
        groupIcon:
          type: string
          enum:
          - LOCK
          - ARROW
          - LETTER
          - HEART
          - FOOTPRINT
          - WINE_GLASS
          - EGG
          - BOUQUET
          - RING
          - STAR
        candidateCount:
          type: integer
          format: int32
        myStatus:
          type: string
          enum:
          - ADMIN
          - MEMBER
          - PENDING
    GroupMemberResponse:
      required:
      - status
      - userId
      - userName
      type: object
      properties:
        userId:
          type: string
        userName:
          type: string
        status:
          type: string
          enum:
          - ADMIN
          - MEMBER
          - PENDING
    GroupInfoDetailResponse:
      required:
      - creatorName
      - infoId
      - isCreatedByMe
      - userInfo
      type: object
      properties:
        groupInfoId:
          type: string
        infoId:
          type: string
        userInfo:
          $ref: '#/components/schemas/DetailedInfoUserInfo'
        idealPartner:
          $ref: '#/components/schemas/DetailedInfoIdealPartner'
        creatorName:
          type: string
        creatorImage:
          type: string
        comment:
          type: string
        isCreatedByMe:
          type: boolean
    AvailableCandidateResponse:
      required:
      - info
      - isAlreadyInGroup
      type: object
      properties:
        info:
          $ref: '#/components/schemas/ArchivedInfoResponse'
        isAlreadyInGroup:
          type: boolean
    UserInfoResponse:
      required:
      - joinType
      - name
      - receiveEmail
      - userId
      type: object
      properties:
        userId:
          type: string
        name:
          type: string
        profileImage:
          type: string
        email:
          type: string
        receiveEmail:
          type: boolean
        joinType:
          type: string
          enum:
          - KAKAO
          - EMAIL
    UserEnrollmentStatusResponse:
      required:
      - hasEmail
      - hasSeenOnboarding
      - inEmailOptOut
      type: object
      properties:
        hasSeenOnboarding:
          type: boolean
        hasEmail:
          type: boolean
        inEmailOptOut:
          type: boolean
  securitySchemes:
    Bearer Token:
      type: http
      scheme: Bearer
      bearerFormat: JWT
